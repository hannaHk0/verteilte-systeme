openapi: 3.0.0
info:
  title: Verteilte Systeme API
  version: 1.0.0
  description: Dokumentation der REST-API für Mitglieder, Kurse und Buchungen.
servers:
  - url: http://localhost:3000
tags:
  - name: Mitglied
    description: Alles zu den Mitgliedern
  - name: Kurs
    description: Alles zu den Kursen
  - name: Buchung
    description: Alles zu den Buchungen
path:
  /mitglied:
    post:
      tags:
        - Mitglied
      summary: Neues Mitglied erstellen
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MitgliedCreate'
      responses:
        '201':
          description: Mitglied wurde erstellt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mitglied'
        '400':
          description: Fehlerhafte Anfrage
  /mitglied/{mitgliedId}:
    get:
      tags:
        - Mitglied
      summary: Einzelnes Mitglied abrufen
      parameters:
        - name: mitgliedId
          in: path
          required: true
          schema:
            type: string
          description: ID des Mitglieds
      responses:
        '200':
          description: Erfolgreiche Antwort mit Mitgliedsdaten
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mitglied'
        '404':
          description: Mitglied nicht gefunden
    path:
      tags:
        - Mitglied
      summary: Mitglied aktualisieren
      parameters:
        - name: mitgliedId
          in: path
          required: true
          schema:
            type: string
          description: ID des zu aktualisierenden Mitglieds
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MitgliedUpdate'
      responses:
        '200':
          description: Mitglied erfolgreich aktualisiert
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mitglied'
        '404':
          description: Mitglied nicht gefunden
    delete:
      tags:
        - Mitglied
      summary: Mitglied löschen
      parameters:
        - name: mitgliedId
          in: path
          required: true
          schema:
            type: string
          description: ID des zu löschenden Mitglieds
      responses:
        '200':
          description: Mitglied erfolgreich gelöscht
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Mitglied gelöscht"
                  data:
                    $ref: '#/components/schemas/Mitglied'
        '404':
          description: Mitglied nicht gefunden
  /kurs:
    post:
      tags:
        - Kurs
      summary: Neuen Kurs erstellen
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KursCreate'
      responses:
        '201':
          description: Kurs wurde erstellt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kurs'
        '400':
          description: Fehlerhafte Anfrage
  /kurs/{kursId}:
    get:
      tags:
        - Kurs
      summary: Einzelnen Kurs abrufen
      parameters:
        - name: kursId
          in: path
          required: true
          schema:
            type: string
          description: ID des Kurses
      responses:
        '200':
          description: Erfolgreiche Antwort mit Kursdaten
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kurs'
        '404':
          description: Kurs nicht gefunden
    path:
      tags:
        - Kurs
      summary: Kurs aktualisieren
      parameters:
        - name: kursId
          in: path
          required: true
          schema:
            type: string
          description: ID des zu aktualisierenden Kurses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KursUpdate'
      responses:
        '200':
          description: Kurs erfolgreich aktualisiert
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kurs'
        '404':
          description: Kurs nicht gefunden
    delete:
      tags:
        - Kurs
      summary: Kurs löschen
      parameters:
        - name: kursId
          in: path
          required: true
          schema:
            type: string
          description: ID des zu löschenden Kurses
      responses:
        '200':
          description: Kurs erfolgreich gelöscht
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Kurs gelöscht"
                  data:
                    $ref: '#/components/schemas/Kurs'
        '404':
          description: Kurs nicht gefunden
  /buchung:
    post:
      tags:
        - Buchung
      summary: Neue Buchung erstellen
      requestBody: