openapi: 3.0.0
info:
  title: Verteilte Systeme API
  version: 1.0.0
  description: Dokumentation der REST-API für Mitglieder, Kurse und Buchungen.
servers:
  - url: http://localhost:3000
tags:
  - name: Mitglied
    description: Alles zu den Mitgliedern
  - name: Kurs
    description: Alles zu den Kursen
  - name: Buchung
    description: Alles zu den Buchungen
paths:
  /mitglied:
    post:
      tags:
        - Mitglied
      summary: Neues Mitglied erstellen
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MitgliedCreate'
      responses:
        '201':
          description: Mitglied wurde erstellt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mitglied'
        '400':
          description: Fehlerhafte Anfrage
  /mitglied/{mitgliedId}:
    get:
      tags:
        - Mitglied
      summary: Einzelnes Mitglied abrufen
      parameters:
        - name: mitgliedId
          in: path
          required: true
          schema:
            type: string
          description: ID des Mitglieds
      responses:
        '200':
          description: Erfolgreiche Antwort mit Mitgliedsdaten
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mitglied'
        '404':
          description: Mitglied nicht gefunden
    delete:
      tags:
        - Mitglied
      summary: Mitglied löschen
      parameters:
        - name: mitgliedId
          in: path
          required: true
          schema:
            type: string
          description: ID des zu löschenden Mitglieds
      responses:
        '200':
          description: Mitglied erfolgreich gelöscht
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Mitglied gelöscht"
                  data:
                    $ref: '#/components/schemas/Mitglied'
        '404':
          description: Mitglied nicht gefunden
  /kurs:
    post:
      tags:
        - Kurs
      summary: Neuen Kurs erstellen
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KursCreate'
      responses:
        '201':
          description: Kurs wurde erstellt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kurs'
        '400':
          description: Fehlerhafte Anfrage
  /kurs/{kursId}:
    get:
      tags:
        - Kurs
      summary: Einzelnen Kurs abrufen
      parameters:
        - name: kursId
          in: path
          required: true
          schema:
            type: string
          description: ID des Kurses
      responses:
        '200':
          description: Erfolgreiche Antwort mit Kursdaten
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kurs'
        '404':
          description: Kurs nicht gefunden
    delete:
      tags:
        - Kurs
      summary: Kurs löschen
      parameters:
        - name: kursId
          in: path
          required: true
          schema:
            type: string
          description: ID des zu löschenden Kurses
      responses:
        '200':
          description: Kurs erfolgreich gelöscht
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Kurs gelöscht"
                  data:
                    $ref: '#/components/schemas/Kurs'
        '404':
          description: Kurs nicht gefunden
  /buchung:
    post:
      tags:
        - Buchung
      summary: Neue Buchung erstellen
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuchungCreate'
      responses:
        '201':
          description: Buchung wurde erstellt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Buchung'
        '400':
          description: Fehlerhafte Anfrage
  /buchung/{buchungId}:
    get:
      tags:
        - Buchung
      summary: Einzelne Buchung abrufen
      parameters:
        - name: buchungId
          in: path
          required: true
          schema:
            type: string
          description: ID der Buchung
      responses:
        '200':
          description: Erfolgreiche Antwort mit Buchungsdaten
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Buchung'
        '404':
          description: Buchung nicht gefunden
    delete:
      tags:
        - Buchung
      summary: Buchung löschen
      parameters:
        - name: buchungId
          in: path
          required: true
          schema:
            type: string
          description: ID der zu löschenden Buchung
      responses:
        '200':
          description: Buchung erfolgreich gelöscht
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Buchung gelöscht"
                  data:
                    $ref: '#/components/schemas/Buchung'
        '404':
          description: Buchung nicht gefunden
components:
  schemas:
    MitgliedCreate:
      type: object
      required:
        - mitgliedId
        - name
      properties:
        mitgliedId:
          type: string
          example: "M001"
        name:
          type: string
          example: "Max Mustermann"
        email:
          type: string
          example: "max@example.com"
        telefonnummer:
          type: string
          example: "0123456789"
    Mitglied:
      type: object
      properties:
        id:
          type: integer
          example: 123456789
        mitgliedId:
          type: string
          example: "M001"
        name:
          type: string
          example: "Max Mustermann"
        email:
          type: string
          example: "max@example.com"
        telefonnummer:
          type: string
          example: "0123456789"
    KursCreate:
      type: object
      required:
        - kursId
        - titel
      properties:
        kursId:
          type: string
          example: "K001"
        titel:
          type: string
          example: "Yoga für Anfänger"
        beschreibung:
          type: string
          example: "Ein Kurs für Yoga-Anfänger"
        trainer:
          type: string
          example: "Anna Müller"
    Kurs:
      type: object
      properties:
        id:
          type: integer
          example: 987654321
        kursId:
          type: string
          example: "K001"
        titel:
          type: string
          example: "Yoga für Anfänger"
        beschreibung:
          type: string
          example: "Ein Kurs für Yoga-Anfänger"
        trainer:
          type: string
          example: "Anna Müller"
    BuchungCreate:
      type: object
      required:
        - buchungId
        - kursId
        - mitgliederId
      properties:
        buchungId:
          type: string
          example: "B001"
        kursId:
          type: string
          example: "K001"
        mitgliederId:
          type: string
          example: "M001"
        buchungsdatum:
          type: string
          format: date-time
          example: "2025-03-20T15:00:00.000Z"
    Buchung:
      type: object
      properties:
        id:
          type: integer
          example: 1122334455
        buchungId:
          type: string
          example: "B001"
        kursId:
          type: string
          example: "K001"
        mitgliederId:
          type: string
          example: "M001"
        buchungsdatum:
          type: string
          format: date-time
          example: "2025-03-20T15:00:00.000Z"